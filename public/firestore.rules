rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read any user's document (for finding players)
    // But only allow writing to their own document
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to create and read events
    match /events/{eventId} {
      // Allow read access to all authenticated users
      allow read: if request.auth != null;
      
      // Allow create if user is authenticated
      allow create: if request.auth != null 
                  && request.resource.data.eventName is string
                  && request.resource.data.sport is string
                  && request.resource.data.dateTime is string
                  && request.resource.data.location is string
                  && request.resource.data.participationType is string
                  && (
                    (request.resource.data.participationType == 'player' && request.resource.data.playersNeeded is number) ||
                    (request.resource.data.participationType == 'team' && request.resource.data.teamsNeeded is number)
                  )
                  && request.resource.data.createdBy == request.auth.uid;
      
      // Allow update for adding participants (only by authenticated users)
      allow update: if request.auth != null
                   && request.auth.uid != null
                   && resource.data.createdBy is string
                   // Only allow updating participants array
                   && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['participants']);
      
      // Allow delete only by the event creator
      allow delete: if request.auth != null
                   && request.auth.uid == resource.data.createdBy;
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
